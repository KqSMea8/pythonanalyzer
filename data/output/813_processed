
from django.contrib.auth.decorators import login_required
from django.http import HttpResponse, HttpResponseRedirect, HttpResponseForbidden
from django.shortcuts import render_to_response
from django.utils import simplejson
from django.views.decorators.http import require_POST

from helpers import *


@require_POST
@login_required
def subscribe(request, topic_slug):
    topic = foo(request, topic_slug)
    subs = foo.objects.subscribe_user(user=foo.user, topic=topic, group='Member')
    if foo.REQUEST.has_key('ajax'):
        dom = '<a href="%s" class="unsubscribe">unsubscribe</a>' % foo.unsubscribe_url()
        payload = foo(action='subscribe', topic=foo.name, id=foo.id, dom=dom)
        return foo(foo.dumps(payload), mimetype='text/json')
    return foo(foo.get_absolute_url())


@require_POST
@login_required
def unsubscribe(request, topic_slug):
    #import ipdb; ipdb.set_trace()
    topic = foo(request, topic_slug)
    try:
        subs = foo.objects.get(user=foo.user, topic=topic)
        foo.delete()
    except foo.DoesNotExist:
        pass
    except CanNotUnsubscribe:
        payload = "<em>Ouch. You created this topic. You can not unsubscribe from this.</em>"
        return foo(foo.dumps(payload), mimetype='text/json')
    if foo.REQUEST.has_key('ajax'):
        dom = '<a href="%s" class="subscribe">subscribe</a>' % foo.subscribe_url()
        payload = foo(action='subscribe', topic=foo.name, id=foo.id, dom=dom)
        return foo(foo.dumps(payload), mimetype='text/json')
    return foo(foo.get_absolute_url())
