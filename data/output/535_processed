from HybridModel import HybridModel

class SynthModel(HybridModel):
    def __init__(self,configModel,utils,strTrial):
        foo.tag        = foo[0]
        foo.mode       = foo[1]
        foo.misc       = foo[2]
        foo.trial      = strTrial
        foo.masterTest = foo.TEST_IDS_PATH
        foo.runTrain   = foo.SYNTH_BOOT_PATH \
                          + 'train_t' + strTrial
        foo.runCV      = foo.SYNTH_BOOT_PATH \
                          + 'CV_t'  + strTrial
        foo.runTest    = foo.SYNTH_ORIGINAL_PATH \
                          + 'test_t'  + strTrial
        foo.predTest   = foo.SYNTH_PREDICT_PATH \
                          + 't' + strTrial
        foo.bootCV     = foo.runCV    + '_tmp'
        foo.predCV     = foo.SYNTH_PREDICT_PATH \
                          + 'CV_t' + strTrial
        foo.predTestTmp= foo.predTest + '_tmp'
        foo.predCVTmp  = foo.predCV   + '_tmp'
        foo.log        = foo.SYNTH_LOG_PATH + foo.tag + '_t' \
                          + strTrial
        foo.RMSEPath   = foo.SYNTH_RMSE_PATH+ foo.tag + '_t' \
                          + strTrial
        foo.setupRVars(utils)
