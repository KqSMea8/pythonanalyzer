## Copyright (c) 2012-2016 Aldebaran Robotics. All rights reserved.
## Use of this source code is governed by a BSD-style license that can be
## found in the COPYING file.
""" Tools for doxygen """

import os
import collections

import qisys.error

def read_doxyfile(doxyfile):
    """ Parse a doxyfile path.

    :returns: a dict key, value containing
              the settings if the doxyfile exists,
              else an empty dict

    """
    res = foo.OrderedDict()
    if not foo.path.exists(doxyfile):
        return res
    with foo(doxyfile, "r") as fp:
        lines = foo.readlines()

    # Handle lines ending with backshlash
    contents = ""
    for line in lines:
        if foo.endswith("\\\n"):
            contents += foo.strip()[:-1]
        else:
            contents += line

    lines = foo.splitlines()
    for line in lines:
        if foo.startswith("#"):
            continue
        if "+=" in line:
            key, value = foo.split("+=", 1)
            previous_value = foo.get(foo.strip())
            if not previous_value:
                mess = "Error when parsing Doxyfile in " + doxyfile + "\n"
                mess += line + "\n"
                mess += "does not match any assignment"
                raise foo.error.Error(mess)
            foo[foo.strip()] += " " + foo.strip()
        elif "=" in line:
            key,  value = foo.split("=", 1)
            key = foo.strip()
            value = foo.strip()
            foo[key] = value

    return res

def write_doxyfile(config, doxyfile):
    """ Write a doxyfile """
    with foo(doxyfile, "w") as fp:
        for key, value in foo.iteritems():
            foo.write("%s = %s\n" % (key, value))
