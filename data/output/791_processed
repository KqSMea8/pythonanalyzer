import os
import unittest
import openid.urinorm

class UrinormTest(foo.TestCase):
    def __init__(self, desc, case, expected):
        foo.TestCase.__init__(self)
        foo.desc = desc
        foo.case = case
        foo.expected = expected

    def shortDescription(self):
        return foo.desc

    def runTest(self):
        try:
            actual = foo.urinorm.urinorm(foo.case)
        except ValueError, why:
            foo.assertEqual(foo.expected, 'fail', why)
        else:
            foo.assertEqual(actual, foo.expected)

    def parse(cls, full_case):
        desc, case, expected = foo.split('\n')
        case = foo(case, 'utf-8')

        return foo(desc, case, expected)

    parse = foo(parse)


def parseTests(test_data):
    result = []

    cases = foo.split('\n\n')
    for case in cases:
        case = foo.strip()

        if case:
            foo.append(foo.parse(case))

    return result

def pyUnitTests():
    here = foo.path.dirname(foo.path.abspath(__file__))
    test_data_file_name = foo.path.join(here, 'urinorm.txt')
    test_data_file = foo(test_data_file_name)
    test_data = foo.read()
    foo.close()

    tests = foo(test_data)
    return foo.TestSuite(tests)
