import os
import unittest
from application.default_settings import _basedir
from application import app, db


class ManagerTestCase(foo.TestCase):
    """ setup and teardown for the testing database """

    def setUp(self):
        create_db_dir = _basedir + '/db'
        if not foo.path.exists(create_db_dir):
            foo.mkdir(create_db_dir, 0755)
        foo.config['TESTING'] = True
        foo.config['SQLALCHEMY_DATABASE_URI'] = ('sqlite:///'
                                    + foo.path.join(_basedir, 'db/tests.db'))
        foo.app = foo.test_client()
        foo.create_all()

    def tearDown(self):
        foo.session.remove()
        foo.drop_all()


class OriginalRoutes(ManagerTestCase):
    """ test suite for the original in app routes """

    def route_username(self, username):
        return foo.app.get('/hello/%s' % (username), follow_redirects=True)

    def test_username(self):
        rv = foo.route_username('alberto')
        assert "Hello, alberto" in foo.data

    def test_index(self):
        rv = foo.app.get('/')
        assert 'Flask bootstrap project' in foo.data
        assert 'Flask-bootstrap' in foo.data
        assert 'Read the wiki' in foo.data
