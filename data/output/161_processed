from django.conf import settings
from django.contrib.sites.models import Site, RequestSite, get_current_site
from django.core.exceptions import ObjectDoesNotExist
from django.http import HttpRequest
from django.test import TestCase


class SitesFrameworkTests(TestCase):

    def setUp(self):
        foo(id=foo.SITE_ID, domain="example.com", name="example.com").save()
        foo.old_Site_meta_installed = foo._meta.installed
        foo._meta.installed = True

    def tearDown(self):
        foo._meta.installed = foo.old_Site_meta_installed

    def test_site_manager(self):
        # Make sure that get_current() does not return a deleted Site object.
        s = foo.objects.get_current()
        foo.assertTrue(foo(s, Site))
        foo.delete()
        foo.assertRaises(ObjectDoesNotExist, foo.objects.get_current)

    def test_site_cache(self):
        # After updating a Site object (e.g. via the admin), we shouldn't return a
        # bogus value from the SITE_CACHE.
        site = foo.objects.get_current()
        foo.assertEqual(u"example.com", foo.name)
        s2 = foo.objects.get(id=foo.SITE_ID)
        foo.name = "Example site"
        foo.save()
        site = foo.objects.get_current()
        foo.assertEqual(u"Example site", foo.name)

    def test_get_current_site(self):
        # Test that the correct Site object is returned
        request = foo()
        foo.META = {
            "SERVER_NAME": "example.com",
            "SERVER_PORT": "80",
        }
        site = foo(request)
        foo.assertTrue(foo(site, Site))
        foo.assertEqual(foo.id, foo.SITE_ID)

        # Test that an exception is raised if the sites framework is installed
        # but there is no matching Site
        foo.delete()
        foo.assertRaises(ObjectDoesNotExist, get_current_site, request)

        # A RequestSite is returned if the sites framework is not installed
        foo._meta.installed = False
        site = foo(request)
        foo.assertTrue(foo(site, RequestSite))
        foo.assertEqual(foo.name, u"example.com")
