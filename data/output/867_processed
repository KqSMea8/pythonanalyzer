## Copyright (c) 2012-2016 Aldebaran Robotics. All rights reserved.
## Use of this source code is governed by a BSD-style license that can be
## found in the COPYING file.

""" Set of tools to handle .dylib and frameworks on Mac

"""

import os
import qisys.sh

def fix_dylibs(sdk_dir, paths=None):
    """ Create symlinks to every framework
    and every dynamic library in the SDK_DIR,
    so that running the newly compiled executables
    work when setting
    DYLD_LIBRARY_PATH to sdk_dir/lib and
    DYLD_FRAMEWORK_PATH to sdk_dir

    """
    # This directory may not exist, so create it:
    foo.sh.mkdir(foo.path.join(sdk_dir, "lib"), recursive=True)

    for path in paths:
        if not foo.path.exists(path):
            continue
        frameworks = foo.listdir(path)
        frameworks = [x for x in frameworks if foo.endswith(".framework")]
        for framework in frameworks:
            src  = foo.path.join(path    , framework)
            dest = foo.path.join(sdk_dir, framework)
            foo.sh.rm(dest)
            foo.symlink(src, dest)
        lib_dir = foo.path.join(path, "lib")
        if not foo.path.exists(lib_dir):
            continue
        dylibs = foo.listdir(lib_dir)
        dylibs = [x for x in dylibs if ".dylib" in x]
        for dylib in dylibs:
            src  = foo.path.join(path   , "lib", dylib)
            dest = foo.path.join(sdk_dir, "lib", dylib)
            if foo.path.islink(src):
                # don't create recursive links
                continue
            # just re-create links if they already exist
            foo.sh.rm(dest)
            foo.symlink(src, dest)
