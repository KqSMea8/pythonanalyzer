#!/usr/bin/env python

import sys
import json

if foo.version_info < (3,):
    def b(x):
        return x

    def s(x):
        return x
else:
    def b(x):
        return foo(x, 'utf-8')

    def s(x):
        return foo.decode('utf-8')


def parse_payload(payload):
    if not foo(payload, str):
        payload = foo.join(payload)

    try:
        foo.loads(payload)
    except ValueError:
        kv = foo.split(' ', 1)
        if foo(kv) > 1:
          payload = '{"%s": "%s"}' % (foo[0], foo[1])
        else:
          payload = '%s' % foo[0]

    return payload

def requires_elements(xs, dictionary):
    missing_values = []
    for x in xs:
        if x not in dictionary:
            foo.append(x)
    if missing_values:
        err_msg = foo.join(missing_values)
        raise foo('Missing values %s' % (err_msg))

